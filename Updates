        sheet_ranges.cell(2, 8).value = day_low[1]
        sheet_ranges.cell(2, 9).value = low_high_split[0]
        sheet_ranges.cell(2, 10).value = low_high_split[2]
        sheet_ranges.cell(2, 11).value = price[0]


workbook = xlrd.open_workbook('CompanyFile.xlsx', on_demand = True)
    worksheet = workbook.sheet_by_index(1)
    wb = load_workbook(filename = 'CompanyFile.xlsx')
    worksheet1 = wb['Sheet2']
    for i in range(row_count - 1):
        try:
            if (worksheet1.cell(i+2,2).value == companycell):
                pchange = worksheet1.cell(i+2,6).value
                pcchange = worksheet1.cell(i+2,7).value
                costPer = int(worksheet1.cell(i+2,3).value)/int(worksheet1.cell(i+2,5).value)
                print(pchange, pcchange, costPer)
        except:
            print('nothing')


def buypromt(count, newcount, cost, walletvalue):
    if count == newcount:
        print("Press 1 to purchase", count, "shares of", company_name + ".")
        userchoice = int(input())
    elif count != newcount:
        print("You can only purchase", newcount, "share(s) of", company_name + ".")
        print("Press 1 to purchase", newcount, "share(s) of", company_name + ".")
        userchoice = int(input())
    if userchoice == 1:
        editwalletvalue(cost, walletvalue)
        wb = load_workbook(filename='CompanyFile.xlsx')
        sheet_ranges = wb['Sheet2']
        i = row_count
    if i == 1:
        sheet_ranges.cell(1, 4).value = float(price[0].replace(",", ""))
        sheet_ranges.cell(1, 3).value = cost
        sheet_ranges.cell(1, 5).value = newcount
        wb.save('CompanyFile.xlsx')
    else:
        sheet_ranges.cell(i, 4).value = float(price[0].replace(",", ""))
        sheet_ranges.cell(i, 3).value = cost
        sheet_ranges.cell(i, 5).value = newcount
        wb.save('CompanyFile.xlsx')
    myportfolio()
    initialwalletvalue()

###PORTFOLIO_TRACKER###

###PORTFOLIO_TRACKER###

def percentchangesearch(stockticker):
    headers = requests.utils.default_headers()
    headers.update({
        'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:20.0) Gecko/20100101 Firefox/20.0',
    })
    url = ("https://finance.yahoo.com/quote/%s" % stockticker)
    urlopen = requests.get(url, headers=headers)
    tree = html.fromstring(urlopen.content, "lxml")
    xprice = tree.xpath('//span[@class="Trsdu(0.3s) Fw(b) Fz(36px) Mb(-4px) D(ib)"]/text()')
    xprice = float(xprice[0].replace(",", ""))
    print("hi")
    return(float(xprice))

def costchange():
    workbook = xlrd.open_workbook('CompanyFile.xlsx', on_demand=True)
    worksheet = workbook.sheet_by_index(1)
    wb = load_workbook(filename='CompanyFile.xlsx')
    worksheet1 = wb['Sheet2']
    for num in range(worksheet.nrows-1):
        companyname = worksheet1.cell(num+2,2).value
        companyticker = worksheet1.cell(num+2,1).value
        sharesowned = int(worksheet1.cell(num+2,5).value)
        costowned = float(worksheet1.cell(num+2,3).value)
        currentcost = percentchangesearch(companyticker)*sharesowned
        pricechange = (percentchangesearch(companyticker)*sharesowned)-(costowned)
        percentchange = pricechange/costowned
        worksheet1.cell(num+2, 6).value = percentchange
        worksheet1.cell(num+2, 7).value = pricechange
        wb.save('CompanyFile.xlsx')
        
def hello():
    print("hello")

def ptabdisplay(ticker):
    gosearch(ticker)
    ptablbl = Label(tab2, text=company_name)
    ptablbl.grid(column=1, row=0)
lastselectionList = []
def onselect(evt):
    #gosearch(str(value[0]))
    #stocklabel = Label(tab2, text=company_name)
    #stocklabel.grid(column=1,row=0)
    # Note here that Tkinter passes an event object to onselect()
    global lastselectionList
    w = evt.widget
    if lastselectionList:  # if not empty
        # compare last selectionlist with new list and extract the difference
        changedSelection = set(lastselectionList).symmetric_difference(set(w.curselection()))
        lastselectionList = w.curselection()
    else:
        # if empty, assign current selection
        lastselectionList = w.curselection()
        changedSelection = w.curselection()
    # changedSelection should always be a set with only one entry, therefore we can convert it to a lst and extract first entry
    index = int(list(changedSelection)[0])
    value = w.get(index)
    messagebox.showinfo("You selected ", value)
    ticker = str(value[0])
    print(value)
    hello()
    ptabdisplay(ticker)
costchange()
